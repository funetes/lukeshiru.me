.animation {
	--animation-delay: 0s;
	--animation-direction: normal;
	--animation-duration: 0s;
	--animation-fill-mode: none;
	--animation-iteration-count: 1;
	--animation-name: none;
	--animation-play-state: running;
	--animation-timing-function: ease;
	animation: var(--animation-name) var(--animation-duration)
		var(--animation-timing-function) var(--animation-delay)
		var(--animation-iteration-count) var(--animation-direction)
		var(--animation-fill-mode) var(--animation-play-state);
}

@media (prefers-reduced-motion: reduce) {
	/* Disable animations if the users prefers reduced motion */
	.animation {
		animation: none;
	}
	/* Set all transition durations to 0 */
	[class*="duration-"] {
		transition-duration: 0s !important;
	}
}

/* Timing *********************************************************************/

.animation-ease {
	--animation-timing-function: ease;
}

.animation-ease-in {
	--animation-timing-function: ease-in;
}

.animation-ease-out {
	--animation-timing-function: ease-out;
}

.animation-ease-in-out {
	--animation-timing-function: ease-in-out;
}

.animation-linear {
	--animation-timing-function: linear;
}

.animation-step-start {
	--animation-timing-function: step-start;
}

.animation-step-end {
	--animation-timing-function: step-end;
}

/* Direction ******************************************************************/

.animation-normal {
	--animation-direction: normal;
}

.animation-reverse {
	--animation-direction: reverse;
}

.animation-alternate {
	--animation-direction: alternate;
}

.animation-alternate-reverse {
	--animation-direction: alternate-reverse;
}

/* Iteration count ************************************************************/

.animation-infinite {
	--animation-iteration-count: infinite;
}

/* Fill mode ******************************************************************/

.animation-fill-none {
	--animation-fill-mode: none;
}

.animation-fill-forwards {
	--animation-fill-mode: forwards;
}

.animation-fill-backwards {
	--animation-fill-mode: backwards;
}

.animation-fill-both {
	--animation-fill-mode: both;
}

/* Play state *****************************************************************/

.animation-running {
	--animation-play-state: running;
}

.animation-paused {
	--animation-play-state: paused;
}

/* Names **********************************************************************/

@keyframes fade-in {
	from {
		fill: transparent;
		opacity: 1;
	}
	to {
		opacity: 1;
	}
}

@keyframes shrink-rotate {
	from {
		opacity: 1;
		transform: translateX(var(--transform-translate-x, 0))
			translateY(var(--transform-translate-y, 0))
			rotate(calc(var(--transform-rotate, 0deg) * 1deg - 90deg))
			skewX(var(--transform-skew-x, 0)) skewY(var(--transform-skew-y, 0))
			scaleX(calc(var(--transform-scale-x, 0) + 10))
			scaleY(calc(var(--transform-scale-y, 0) + 10));
	}
	to {
		opacity: 1;
	}
}

@keyframes rotating {
	to {
		transform: translateX(var(--transform-translate-x, 0))
			translateY(var(--transform-translate-y, 0))
			rotate(calc(var(--transform-rotate, 0deg) + 360deg))
			skewX(var(--transform-skew-x, 0)) skewY(var(--transform-skew-y, 0))
			scaleX(var(--transform-scale-x, 0))
			scaleY(var(--transform-scale-y, 0));
	}
}

.animation-fade-in {
	--animation-name: fade-in;
	will-change: fill;
}

.animation-rotating {
	--animation-name: rotating;
	will-change: transform;
}

.animation-shrink-rotate {
	--animation-name: shrink-rotate;
	will-change: transform;
}
